{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","searchText","target","value","onClick","matches","state","repositories","filter","match","name","includes","keyPressHandler","key","_this2","$","ajax","url","success","responce","items","react_default","a","createElement","className","style","background","color","padding","onKeyPress","placeholder","margin","textAlign","map","obj","id","height","width","src","owner","avatar_url","alt","borderRadius","border","uk-icon","watchers","forks","open_issues","overflow","description","href","html_url","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09c1895c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      repositories: [],\r\n      matches: [],\r\n      searchText: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: \"https://api.github.com/search/repositories?q=TEST\",\r\n      success: (responce) => {\r\n        this.setState({repositories: responce.items})\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({searchText: e.target.value})\r\n  }\r\n\r\n  onClick = () => {\r\n    let matches = this.state.repositories.filter(match => {\r\n      return match.name.includes(this.state.searchText) ? match : null   // If user click on search button\r\n    })\r\n    this.setState({matches: matches})\r\n  }\r\n\r\n  keyPressHandler = (e) => {\r\n    if (e.key === 'Enter') {\r\n      let matches = this.state.repositories.filter(match => {\r\n        return match.name.includes(this.state.searchText) ? match : null // if user press enter key\r\n      })\r\n      this.setState({matches: matches})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n    <div className=\"uk-card uk-card-default\">\r\n      <div className=\"uk-card-header\">\r\n        <div className=\"uk-card-title\" style={{background: '#2F72A4', color: 'azure', padding: '10px'}}>Repository Search</div>\r\n        <div className={`uk-card-body uk-grid`}>\r\n          <input\r\n            className={`uk-input uk-width-1-2`}\r\n            onChange={this.onChange}\r\n            onKeyPress={this.keyPressHandler}\r\n            placeholder=\"type text for repo search....\"\r\n          />\r\n          <button className={`uk-inline uk-button uk-text-bold uk-width-1-6`} onClick={this.onClick} style={{background: '#2F72A4', color: 'azure', margin: \"0px 0px 0px 80px\"}}>Search</button>\r\n        </div>\r\n      </div>\r\n      <h4 style={{textAlign: 'center'}}>Repo search results</h4>\r\n      <hr/>\r\n      <div className={`uk-card-body uk-grid`} style={{textAlign: \"center\", margin: \"75px\"}}>\r\n        {this.state.matches.map(\r\n          obj => {\r\n            return <div key={obj.id} className={`uk-width-1-4 uk-card uk-card-default uk-card-small`} style={{margin: \"3px 3px 3px 3px\", height: '500px', width: \"400px\"}}>\r\n              <div className=\"uk-card\">\r\n                <div className='uk-card-header'>\r\n                  <img src={obj.owner.avatar_url} alt={obj.name} style={{ borderRadius: \"50%\", height: \"50%\", width: \"50%\"}}/>\r\n                  <h2>{obj.name}</h2>\r\n                </div>\r\n                <div className=\"uk-grid\">\r\n                  <div className=\"uk-width-1-3\" style={{borderRadius: \"30px\", border: \"1px solid gray\", margin: '0px', padding: '0px', width: '115px', height: '30px'}}>\r\n                    <div className=\"uk-grid\" style={{margin: '0px', padding: '0px'}}>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}} uk-icon=\"icon: youtube\"></div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>view</div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>{obj.watchers}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-1-3\" style={{borderRadius: \"30px\", border: \"1px solid gray\", margin: '0px', padding: '0px', width: '100px', height: '30px'}}>\r\n                    <div className=\"uk-grid\" style={{margin: '0px', padding: '0px'}}>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}} uk-icon=\"icon: git-fork\"></div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>forks</div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>{obj.forks}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-1-3\" style={{borderRadius: \"30px\", border: \"1px solid gray\", margin: '0px', padding: '0px', width: '145px', height: '30px'}}>\r\n                    <div className=\"uk-grid\" style={{margin: '0px', padding: '0px'}}>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}} uk-icon=\"icon: bell\"></div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>open issues</div>\r\n                      <div className=\"uk-width-auto\" style={{margin: '0px', padding: '1px'}}>{obj.open_issues}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{overflow: true}}>{obj.description}</div>\r\n              </div>\r\n              <div className=\"uk-card-footer\">\r\n                <a className={`uk-inline uk-button uk-text-bold`} style={{background: '#2F72A4', color: 'azure'}} href={obj.owner.html_url}>View Propfile</a>\r\n              </div>\r\n            </div>\r\n          }\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}